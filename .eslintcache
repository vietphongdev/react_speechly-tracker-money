[{"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\index.js":"1","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\App.js":"2","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\context\\context.js":"3","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\styles.js":"4","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\context\\contextReducer.js":"5","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\data\\transactions.js":"6","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\index.js":"7","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\InfoCard.jsx":"8","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\Main.jsx":"9","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Details\\Details.jsx":"10","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Snackbar\\Snackbar.jsx":"11","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Snackbar\\styles.js":"12","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\constants\\categories.js":"13","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Details\\styles.js":"14","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\styles.js":"15","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\List\\List.jsx":"16","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\Form.jsx":"17","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\styles.js":"18","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\List\\styles.js":"19","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\utils\\formatDate.js":"20","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\hooks\\useTransactions.js":"21"},{"size":431,"mtime":1611457609256,"results":"22","hashOfConfig":"23"},{"size":1440,"mtime":1611457609236,"results":"24","hashOfConfig":"23"},{"size":1094,"mtime":1611666581630,"results":"25","hashOfConfig":"23"},{"size":582,"mtime":1611457609256,"results":"26","hashOfConfig":"23"},{"size":583,"mtime":1611457609254,"results":"27","hashOfConfig":"23"},{"size":1388,"mtime":1611666573840,"results":"28","hashOfConfig":"23"},{"size":216,"mtime":1611457609252,"results":"29","hashOfConfig":"23"},{"size":460,"mtime":1611457609242,"results":"30","hashOfConfig":"23"},{"size":1190,"mtime":1611975279197,"results":"31","hashOfConfig":"23"},{"size":733,"mtime":1611752248854,"results":"32","hashOfConfig":"23"},{"size":797,"mtime":1611457609251,"results":"33","hashOfConfig":"23"},{"size":206,"mtime":1611457609252,"results":"34","hashOfConfig":"23"},{"size":1765,"mtime":1611669578099,"results":"35","hashOfConfig":"23"},{"size":247,"mtime":1611457609241,"results":"36","hashOfConfig":"23"},{"size":514,"mtime":1611457609250,"results":"37","hashOfConfig":"23"},{"size":1717,"mtime":1611668242986,"results":"38","hashOfConfig":"23"},{"size":5607,"mtime":1611668576323,"results":"39","hashOfConfig":"23"},{"size":247,"mtime":1611457609248,"results":"40","hashOfConfig":"23"},{"size":416,"mtime":1611457609249,"results":"41","hashOfConfig":"23"},{"size":301,"mtime":1611670645851,"results":"42","hashOfConfig":"23"},{"size":1175,"mtime":1611671001974,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dl7iry",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\index.js",[],["89","90"],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\App.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\context\\context.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\styles.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\context\\contextReducer.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\data\\transactions.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\index.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\InfoCard.jsx",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\Main.jsx",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Details\\Details.jsx",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Snackbar\\Snackbar.jsx",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Snackbar\\styles.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\constants\\categories.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Details\\styles.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\styles.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\List\\List.jsx",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\Form.jsx",["91"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport Snackbar from \"../../Snackbar/Snackbar\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: \"Income\" });\r\n    } else if (\r\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\r\n    ) {\r\n      setFormData({ ...formData, type: \"Expense\" });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\styles.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\components\\Main\\List\\styles.js",[],"D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\utils\\formatDate.js",["92"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","D:\\Learning\\IT\\Reactjs\\Projects\\speechly_expense_tracker_project\\src\\hooks\\useTransactions.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":112,"column":6,"nodeType":"99","endLine":112,"endColumn":15,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":11,"endColumn":3},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["106"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"109","text":"110"},[3248,3257],"[createTransaction, formData, segment]"]